# R/annotateList.R

#' Annotate a List of Gene Markers with Multiple Databases
#'
#' This function takes a list of gene markers and annotates them using BRETIGEA,
#' CellMarker 2.0, PanglaoDB, and Human Protein Atlas databases.
#'
#' @param input_list A list of gene markers.
#' @return A data frame containing the annotated gene markers with consensus cell types.
#' @export
annotateList <- function(input_list) {
  # Input validation
  if (!is.list(input_list)) {
    stop("input_list must be a list.")
  }

  # Convert list to data frame
  df <- data.frame(markers = unlist(input_list), stringsAsFactors = FALSE)
  df$index <- seq_len(nrow(df))

  # Perform individual annotations
  annotated_bretigea <- annotate_bretigea(df)
  annotated_cellmarker <- annotate_cellmarker(df)
  annotated_panglaodb <- annotate_panglaodb(df)

  # HPA annotations return a list
  hpa_annotations <- annotate_hpa(df)
  annotated_hpa <- hpa_annotations$annotated_hpa
  annotated_hpa2 <- hpa_annotations$annotated_hpa2

  # Combine all annotations using left_join on 'index'
  annotated_df <- df %>%
    dplyr::select(markers, index) %>%
    dplyr::left_join(annotated_bretigea, by = "index") %>%
    dplyr::left_join(annotated_cellmarker, by = "index") %>%
    dplyr::left_join(annotated_panglaodb, by = "index") %>%
    dplyr::left_join(annotated_hpa, by = "index") %>%
    dplyr::left_join(annotated_hpa2, by = "index")

  # Rename cell types to standard labels
  annotated_df <- rename_cell_types(annotated_df)

  # Define list of interests
  interests <- c("Neuron", "Endothelial", "Astrocyte",
                 "Microglia", "Oligodendrocyte", "OPC",
                 "T cell", "B cell", "NK cell", "Pericyte", "Fibroblast")

  # Function to identify consensus cell type and calculate consensus score
  consensus_info <- subset_consensus(annotated_df)

  # Combine with the original dataframe
  final_df <- dplyr::bind_cols(annotated_df, consensus_info)

  # Filter out rows without a valid consensus
  final_df <- final_df %>%
    dplyr::filter(!is.na(Consensus))

  return(final_df)
}
