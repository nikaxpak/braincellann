# R/annotate_hpa.R

#' Annotate Markers with Human Protein Atlas Database
#'
#' @param df A data frame containing gene markers and an index column.
#' @return A list containing two data frames with HPA annotations.
#' @export
annotate_hpa <- function(df) {
  # First HPA Annotation
  hpa.df <- hpaDownload(downloadList = 'Normal tissue')  # Assumes hpaDownload is defined elsewhere

  tissueList <- c('cerebral cortex', 'cerebellum', 'hypothalamus', 'substantia nigra')
  levelList <- c('Medium', 'High', 'Ascending')
  reliability <- c('Approved', 'Enhanced', 'Supported')

  subset_hpa <- hpaSubset(data = hpa.df, targetGene = df$markers, targetTissue = tissueList)  # Assumes hpaSubset is defined

  hpa <- data.frame(
    markers = subset_hpa[["normal_tissue"]][["gene"]],
    tissue = subset_hpa[["normal_tissue"]][["tissue"]],
    cell_type = subset_hpa[["normal_tissue"]][["cell_type"]],
    level = subset_hpa[["normal_tissue"]][["level"]],
    reliability = subset_hpa[["normal_tissue"]][["reliability"]],
    stringsAsFactors = FALSE
  )

  hpa_filtered <- hpa %>%
    dplyr::filter(
      level %in% c('Medium', 'High', 'Ascending', 'Low'),
      reliability %in% c('Approved', 'Enhanced', 'Supported')
    )

  merged_hpa <- merge(df, hpa_filtered, by = "markers", all.x = TRUE) %>%
    arrange(index)

  annotated_hpa <- merged_hpa %>%
    dplyr::group_by(index) %>%
    dplyr::summarise(
      markers = paste(unique(markers), collapse = ", "),
      cell_type = paste(unique(cell_type), collapse = ", ")
    ) %>%
    tidyr::separate(cell_type, into = paste0("HumanProteinAtlas_", 1:2), sep = ", ", fill = "right") %>%
    dplyr::select(-markers, -index)

  # Second HPA Annotation
  original_timeout <- getOption("timeout")
  options(timeout = 300)

  hpa.df2 <- hpaDownload(downloadList = "RNA single cell type tissue cluster")

  subset_hpa2 <- hpaSubset(data = hpa.df2, targetGene = df$markers, targetTissue = "brain")

  hpa2 <- data.frame(
    markers = subset_hpa2[["rna_single_cell_type_tissue"]][["gene"]],
    cell_type = subset_hpa2[["rna_single_cell_type_tissue"]][["cell_type"]],
    ntpm = subset_hpa2[["rna_single_cell_type_tissue"]][["ptpm"]],
    stringsAsFactors = FALSE
  )

  # Restore original timeout
  options(timeout = original_timeout)

  merged_hpa2 <- merge(df, hpa2, by = "markers", all.x = TRUE) %>%
    arrange(index)

  prepared_hpa2 <- merged_hpa2 %>%
    dplyr::arrange(index, desc(ntpm)) %>%
    dplyr::group_by(index, cell_type) %>%
    dplyr::filter(dplyr::row_number() == 1) %>%
    dplyr::ungroup() %>%
    dplyr::group_by(index) %>%
    dplyr::mutate(rank = dplyr::row_number()) %>%
    dplyr::filter(rank <= 2) %>%
    dplyr::ungroup() %>%
    dplyr::mutate(cell_type_id = paste0("cell_type_", rank)) %>%
    dplyr::select(index, cell_type_id, cell_type) %>%
    tidyr::pivot_wider(
      id_cols = index,
      names_from = cell_type_id,
      values_from = cell_type,
      values_fill = list(cell_type = NA)
    )

  annotated_hpa2 <- prepared_hpa2 %>%
    dplyr::select(-index)

  return(list(annotated_hpa = annotated_hpa, annotated_hpa2 = annotated_hpa2))
}
